# Optional: Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
#services:
#  - mysql:latest
#  - redis:latest
#  - postgres:latest

# Optional: Install a C compiler, cmake and git into the container.
# You will often need this when you (or any of your dependencies) depends on C code.
#before_script:
#- apt-get update -yqq
#- apt-get install -yqq --no-install-recommends build-essential
image: "rust:latest"

variables:
  CARGO_HOME: ".cargo"

cache:
  paths:
  - "$CARGO_HOME"

# Use cargo to test the project
test:cargo:
  # Official language image. Look for the different tagged releases at:
  # https://hub.docker.com/r/library/rust/tags/
  tags:
  - docker
  script:
  - rustc --version && cargo --version      # Print version info for debugging
  - cargo test --verbose --jobs 1 --release # Don't paralize to make errors more readable
